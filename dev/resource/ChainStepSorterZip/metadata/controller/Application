{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "Application"
    },
    "designerId": "30321ebb-d159-427a-9ebf-87c303155eb7",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "button#newStep",
                "designer|targetType": "Ext.button.Button",
                "fn": "onButtonBeforeRender",
                "implHandler": [
                    "var button = component;",
                    "var tag2processes = {};",
                    "",
                    "Ext.getStore('Processes').each(function(process) {",
                    "    var processes = [];",
                    "    tag2processes[process.get('Tag')] = processes;",
                    "});",
                    "",
                    "Ext.getStore('Processes').each(function(process) {",
                    "    var processes = tag2processes[process.get('Tag')];",
                    "    processes.push(process);",
                    "});",
                    "",
                    "var menu = button.menu;",
                    "",
                    "//iterate over each tag name",
                    "Ext.each(Ext.Object.getKeys(tag2processes), function(tag) {",
                    "    var tagItem = {",
                    "        text: tag,",
                    "        menu: {",
                    "            items: []",
                    "        }",
                    "    };",
                    "",
                    "    //iterate over each process",
                    "    Ext.each(tag2processes[tag], function(process) {",
                    "        var processItem = {",
                    "            itemId: process.get('Id'),",
                    "            text: process.get('Name'),",
                    "            iconCls: process.get('Icon')",
                    "        };",
                    "",
                    "        //add process item to tag",
                    "        tagItem.menu.items.push(processItem);",
                    "    });",
                    "",
                    "    //add tag item to menu",
                    "    menu.add(tagItem);",
                    "});",
                    ""
                ],
                "name": "beforerender",
                "scope": "me"
            },
            "designerId": "5b6aba6d-4459-4e22-be84-b467900d804b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "menuitem",
                "designer|targetType": "Ext.menu.Item",
                "fn": "onMenuitemClick",
                "implHandler": [
                    "var me = this,",
                    "    grid = me.getGrid(),",
                    "    view = grid.getView(),",
                    "    store = grid.getStore(),",
                    "    processId = item.getItemId(),",
                    "    chainId = Chain__c.Id;",
                    "",
                    "view.mask('Saving...');",
                    "Visualforce.remoting.Manager.invokeAction(",
                    "    $RemoteAction.ChainSorterController.appendStep,",
                    "    chainId,",
                    "    processId,",
                    "    function(chainStep) {",
                    "        view.mask('Saving...');",
                    "        store.load(function() {",
                    "            view.unmask();",
                    "        });",
                    "    }",
                    ");"
                ],
                "name": "click",
                "scope": "me"
            },
            "designerId": "2a71ff26-5830-4f54-ba2d-2182b57bbec1"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "grid",
                "selector": "gridpanel#steps",
                "xtype": "Ext.grid.Panel"
            },
            "designerId": "41d85ef8-2f64-434f-9d0f-582d9481dacd"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#steps > gridview",
                "designer|params": [
                    "node",
                    "data",
                    "overModel",
                    "dropPosition",
                    "eOpts"
                ],
                "designer|targetType": "Ext.grid.View",
                "fn": "onGridViewDrop",
                "implHandler": [
                    "var controller = this,",
                    "    grid = data.view.ownerCt,",
                    "    fromStep = data.records[0],",
                    "    toStep = overModel,",
                    "    store = grid.getStore();",
                    "",
                    "var beforeOrAfter;",
                    "if ('before' == dropPosition) {",
                    "    beforeOrAfter = $RemoteAction.ChainSorterController.moveChainStepBefore;",
                    "} else if ('after' == dropPosition) {",
                    "    beforeOrAfter = $RemoteAction.ChainSorterController.moveChainStepAfter;",
                    "}",
                    "",
                    "grid.mask('Moving...');",
                    "Visualforce.remoting.Manager.invokeAction(",
                    "    beforeOrAfter,",
                    "    fromStep.get('Id'),",
                    "    toStep.get('Id'),",
                    "    function(data) {",
                    "        grid.mask('Moving...');",
                    "        store.load(function() {",
                    "            grid.unmask();",
                    "        });",
                    "    }",
                    ");",
                    "",
                    "/*",
                    "store.each(function(model, index, total) {",
                    "    model.set('Sequence', index + 1);",
                    "});",
                    "",
                    "",
                    "",
                    "store.sync({",
                    "    callback: function() {",
                    "        grid.unmask();",
                    "    }",
                    "});",
                    "*/"
                ],
                "name": "drop",
                "scope": "me"
            },
            "designerId": "f513ebc3-a6ba-46be-8bdc-ff93c33f3fc3"
        }
    ]
}