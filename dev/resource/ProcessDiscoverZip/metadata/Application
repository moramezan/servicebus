{
    "type": "Ext.app.Application",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "controllers": [
            "Application"
        ],
        "models": [
            "Process",
            "AsyncApexJob"
        ],
        "name": "Discover",
        "requires": [
            "Fflib.data.proxy.VFRemote",
            "Ext.Msg"
        ],
        "stores": [
            "Processes",
            "AsyncApexJob"
        ],
        "views": [
            "Holder"
        ]
    },
    "designerId": "application",
    "cn": [
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "launch",
                "implHandler": [
                    "/**",
                    " * There's some pretty crazy polling going on in this application. We do it to",
                    " * provide user feedback about the status of an Batch Apex job. Batch Apex can sit",
                    " * around in a bullshit nondeterminate state (Queued) for long periods of time,",
                    " * so we poll and wait until we see it handle at least ONE record, before blasting",
                    " * the platform with requests to show us WHAT it's doing (generating processes).",
                    " *",
                    " * The host page is rendered with the StandardController for AsyncApexJob, so at",
                    " * the time the application is loaded, we know the initial Job Id etc.",
                    " *",
                    " * 1. The grid is rendered, and we immediately begin polling the AsyncApexJob.",
                    " *",
                    " * 2. When (asyncApexJob.JobItemsProcessed > 0) the batch has [started] for real.",
                    " *",
                    " * 3. On [started] event, we immediately ALSO begin polling the Processes.",
                    " *",
                    " * 4. When (asyncApexJob.Status is Aborted|Completed|Failed) it is [finished].",
                    " *",
                    " * 5. On [finished] event, we stop polling both the AsyncApexJob and Processes.",
                    " */",
                    "",
                    "Ext.create('Discover.view.Holder', {renderTo: 'bodyCell'});",
                    "",
                    "/**",
                    " * The first time the package is installed and a sequence is created,",
                    " * let the user know why they are here and that they'll be taken back.",
                    " */",
                    "if (!IsTerminatePresent) {",
                    "    var msg = Ext.Msg.alert(",
                    "        'Almost there...',",
                    "        'Before building your first sequence, we just need to<br />discover the available processes in your organization.<br />You will be taken back to your sequence straight after.'",
                    "    );",
                    "    msg.setIcon(Ext.MessageBox.INFO);",
                    "    msg.getEl().dom.style.zIndex = 99999; //alert in front of twirly: http://forums.ext.net/showthread.php?15882",
                    "    msg.alignTo(Ext.ComponentQuery.query('#grid')[0], 'c-c'); //align center of alert to center of grid",
                    "}"
                ]
            },
            "designerId": "2362d9de-39a0-4900-a1f3-96bf29152521"
        }
    ]
}