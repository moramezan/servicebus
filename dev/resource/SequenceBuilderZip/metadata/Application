{
    "type": "Ext.app.Application",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "controllers": [
            "Application"
        ],
        "models": [
            "Service",
            "Step"
        ],
        "name": "Builder",
        "stores": [
            "Services",
            "Steps"
        ],
        "views": [
            "Buttons",
            "Main"
        ]
    },
    "name": "Application",
    "designerId": "application",
    "cn": [
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "launch",
                "implHandler": [
                    "//http://www.sencha.com/forum/showthread.php?296173-validIdRe-throwing-Invalid-Element-quot-id-quot-for-valid-ids-containing-colons&p=1081456#post1081456",
                    "Ext.dom.Element.prototype.validIdRe = /^[a-z_][:a-z0-9\\-_]*$/i;",
                    "",
                    "if (ServerCacheKey == ClientCacheKey) {",
                    "    //load services from localstorage",
                    "    Ext.log('Loading local storage...');",
                    "    Services = Ext.JSON.decode(Ext.util.LocalStorage.get('ServicesCache').getItem('Services'));",
                    "    ",
                    "    //initialize stores",
                    "    Ext.getStore('Services').loadRawData(Services);",
                    "    Ext.getStore('Steps').loadRawData(Steps);",
                    "    ",
                    "    //display the client",
                    "    Ext.create('Builder.view.Main', {renderTo: $Component.pageBlockId});",
                    "    Ext.get($Component.pageBlockId).down('div.pbBody').remove();",
                    "    Ext.create('Builder.view.Buttons', {renderTo: $Component.pageBlockButtonsId});",
                    "    ",
                    "} else {",
                    "    //rediscover all services",
                    "    Ext.each(Namespaces, function(namespace) {",
                    "        Visualforce.remoting.Manager.invokeAction(",
                    "            $RemoteAction.SequenceBuilderExtension.Discover,",
                    "            namespace,",
                    "            function(services) {",
                    "                //accumulate each",
                    "                Namespaces.pop();",
                    "                Services.push.apply(Services, services);",
                    "                ",
                    "                //this was the last one",
                    "                if (!Namespaces.length) {",
                    "                    //save services into localstorage",
                    "                    Ext.log('Saving local storage...');",
                    "                    Ext.util.LocalStorage.get('ServicesCache').setItem(Ext.JSON.encode(Services));",
                    "                    ",
                    "                    //initialize stores",
                    "                    Ext.getStore('Services').loadRawData(Services);",
                    "                    Ext.getStore('Steps').loadRawData(Steps);",
                    "                    ",
                    "                    //display the client",
                    "                    Ext.create('Builder.view.Main', {renderTo: $Component.pageBlockId});",
                    "                    Ext.get($Component.pageBlockId).down('div.pbBody').remove();",
                    "                    Ext.create('Builder.view.Buttons', {renderTo: $Component.pageBlockButtonsId});",
                    "                    ",
                    "                    //update client cache key",
                    "                    document.cookie = 'apex__ClientCacheKey=' + ServerCacheKey + '; expires=-1; path=/';",
                    "                }",
                    "            }",
                    "        );",
                    "    });",
                    "}"
                ]
            },
            "name": "launch",
            "designerId": "f8c1a541-2ab1-401a-bafa-3faf4b9be525"
        }
    ]
}