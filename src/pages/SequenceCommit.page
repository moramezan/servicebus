<apex:page setup="true" standardController="Sequence__c" recordSetVar="sequences" extensions="SequenceCommitExtension" action="{!doCommit}">
    
    <script>
        (function() {
            if (!document.getElementsByClassName) return;
            var lis = document.getElementsByClassName('wt-Sequence');
            if (!lis.length) return;
            lis[0].className += ' zen-active primaryPalette';
            var a = lis[0].children[0];
            if (!a) return;
            a.className += ' brandPrimaryFgr';
        }());
    </script>
    
    <apex:pageMessages />
    
    <!-- make the loading mask go away -->
    <style>div.z-mask {background: none !important;}</style>
    
    <apex:outputPanel rendered="{!$CurrentPage.Parameters.Id != null}" layout="none">
        
        <apex:sectionHeader help="{!URLFOR($Page.SequenceHelp)}" title="Commit New Version" />
        
        <div id="pageBlockId"></div>
        
        <apex:variable var="application" value="Progress" /><!-- Application namespace such as MyApp -->
        <apex:variable var="resource" value="{!$Resource.AsyncApexJobProgressZip}" /><!-- The $Resource containing app.js -->
        <apex:variable var="path" value="" /><!-- Development mode prefixes all resources, production mode loads the Sencha Cmd output -->
        <apex:variable var="baseCSSPrefix" value="z-" /><!-- Ext.buildSettings.baseCSSPrefix which will be applied before the framework loads -->
        
        <!-- BASE CSS PREFIX -->
        <script>
            Ext = {buildSettings: {baseCSSPrefix: '{!baseCSSPrefix}'}};
        </script>
        
        <!-- BRIDGING COMPONENTS -->
        <script>
            window.$RemoteAction = window.$RemoteAction || {};
            $RemoteAction.AsyncApexJobProgressExtension = $RemoteAction.AsyncApexJobProgressExtension || {};
            $RemoteAction.AsyncApexJobProgressExtension.ReadRecords = '{!$RemoteAction.SequenceCommitExtension.ReadRecords}';
            $RemoteAction.AsyncApexJobProgressExtension.ReadAsyncApexJobs = '{!$RemoteAction.SequenceCommitExtension.ReadAsyncApexJobs}';

            window.retURL = '{!JSENCODE($CurrentPage.Parameters.retURL)}' || '{!URLFOR($Action.Sequence__c.List, $ObjectType.Sequence__c.KeyPrefix)}'; //#782 reflected xss
            
            window.AsyncApexJob = window.AsyncApexJob || {};
            AsyncApexJob.Id = '{!AsyncApexJob.Id}';
            AsyncApexJob.CompletedDate = '{!AsyncApexJob.CompletedDate}';
            AsyncApexJob.CreatedDate = '{!AsyncApexJob.CreatedDate}';
            AsyncApexJob.ExtendedStatus = '{!AsyncApexJob.ExtendedStatus}';
            AsyncApexJob.JobItemsProcessed = Number({!AsyncApexJob.JobItemsProcessed});
            AsyncApexJob.JobType = '{!AsyncApexJob.JobType}';
            AsyncApexJob.LastProcessed = '{!AsyncApexJob.LastProcessed}';
            AsyncApexJob.LastProcessedOffset = Number({!AsyncApexJob.LastProcessedOffset});
            AsyncApexJob.NumberOfErrors = Number({!AsyncApexJob.NumberOfErrors});
            AsyncApexJob.Status = '{!AsyncApexJob.Status}';
            AsyncApexJob.TotalJobItems = Number({!AsyncApexJob.TotalJobItems});
            
            window.Launch = function(callback) {
                callback();
            }
        </script>
        
        <!--
         ! DEVELOPMENT
         !-->
        <!-- set path variable -->
        <apex:outputPanel rendered="{!LEN(path) != 0}" layout="none">
            <base href="{!path}{!resource}/" />
            <script src="{!path}{!resource}/bootstrap.js"></script>
        </apex:outputPanel>
        <!-- set path variable -->
        
        <!--
         ! PRODUCTION
         ! see SequenceEditZip/build.xml and ext-baseurl.js
         ! http://www.sencha.com/forum/showthread.php?290269-CMD-5.0.1.231-production-build-error-Cannot-read-property-baseUrl-of-undefined&p=1064889&viewfull=1#post1064889
         !-->
        <!-- unset path variable -->
        <apex:outputPanel rendered="{!LEN(path) == 0}" layout="none">
            <script>Ext = window.Ext || {}; Ext.Boot={};</script>
            <script src="{!URLFOR(resource, '/app.js')}"></script>
            <link href="{!URLFOR(resource, '/resources/' + application + '-all.css')}" rel="stylesheet" type="text/css" />
        </apex:outputPanel>
        <!-- unset path variable -->
    
    </apex:outputPanel>

</apex:page>