<apex:page setup="true" tabStyle="Monitor__tab" sidebar="false" controller="MonitorController" title="Monitor" readOnly="true">
    
    <script>
        (function() {
            if (!document.getElementsByClassName) return;
            var lis = document.getElementsByClassName('wt-Monitor');
            if (!lis.length) return;
            lis[0].className += ' zen-active primaryPalette';
            var a = lis[0].children[0];
            if (!a) return;
            a.className += ' brandPrimaryFgr';
        }());
    </script>
    
    <apex:pageMessages showDetail="false" />
    
    Change live system:
    <select onchange="Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.MonitorController.ChooseVersion}', this.value, function() {});">
        <apex:repeat value="{!RunnableVersions}" var="runnableVersion">
            <apex:outputPanel layout="none" rendered="{!LiveVersion == runnableVersion}">
                <option value="{!runnableVersion}" selected="selected">Version {!runnableVersion}</option>
            </apex:outputPanel>
            <apex:outputPanel layout="none" rendered="{!LiveVersion != runnableVersion}">
                <option value="{!runnableVersion}">Version {!runnableVersion}</option>
            </apex:outputPanel>
        </apex:repeat>
        <apex:outputPanel layout="none" rendered="{!DraftVersion != null}"><optgroup label="Version {!DraftVersion} (Draft)" /></apex:outputPanel>
    </select>
    
    <apex:sectionHeader title="Message Queue Monitoring" help="{!URLFOR($Page.MonitorSplash)}" />
    
    <!-- #769 -->
    <input checked="checked" type="checkbox" id="realtime" onclick="if(this.checked){var that=this;this.disabled = true;setTimeout(function() {that.checked=false;that.disabled=false;}, 60000);}" />
    <script>setTimeout(function() {document.getElementById('realtime').checked=false;}, 60000);</script>
    <label for="realtime" title="Redraw every second for 60 seconds">Realtime</label>
    
    <!-- #803 -->
    <img id="isBrokerRunning" src="{!URLFOR('/img/loading.gif')}" style="display:none;position:relative;top:4px;left:8px;" title="Broker is running" />
    <img id="hasQueueableJobs" src="{!URLFOR('/img/apex/processing.gif')}" style="display:none;position:relative;top:4px;left:16px;" title="Jobs are pending" />
    
    <script>
        (function() {
            function drawJobs() {
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.MonitorController.fetchJobs}',
                    function(data) {
                        var isBrokerRunning = data[0];
                        var hasQueueableJobs = data[1];
                        document.getElementById('isBrokerRunning').style.display = isBrokerRunning ? 'inline' : 'none';
                        document.getElementById('hasQueueableJobs').style.display = isBrokerRunning ? 'inline' : 'none';
                    }
                );
            }
            
            //background count every 5 seconds
            setInterval(drawJobs, 5000);
            
            //start off once
            drawJobs();
        }());
    </script>
    
    <apex:chart data="{!null}" width="100%" height="500" name="Stats">
        <apex:legend position="right" />
        <apex:axis type="Category" position="bottom" title="Step" fields="ApexClassName">
            <apex:chartLabel rotate="270" />
        </apex:axis>
        <apex:axis type="Numeric" position="left" fields="Paused,Buffered,Started,Exceptions">
            <apex:chartLabel />
        </apex:axis>
        <apex:barSeries colorSet="#C00" orientation="vertical" axis="left" xField="ApexClassName" yField="Exceptions" title="Exception" />
        <apex:areaSeries colorSet="#999,#3C3,#CC3,#33C"
            opacity="0.6"
            axis="left"
            xField="ApexClassName"
            yField="Paused,Buffered,Started"
            title="Paused,Buffered,Started"
        />
    </apex:chart>
    
    <script>
        (function redrawStatistics() {
            //realtime checkbox empty, look again soon
            var checkbox = document.getElementById('realtime'); //#769
            if (!checkbox.checked) return setTimeout(redrawStatistics, 1000);
            
            //realtime checkbox full, draw every ~1 second
            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.MonitorController.fetchStatistics}', //fetchTestStatistics
                function(data) {
                    {!$Setup.NamespaceSetting__c.DotPrefix__c}Stats.reload(data);
                    setTimeout(redrawStatistics, 1000);
                }
            );
        }());
    
        (function() {
            //background draw every 15 seconds
            setInterval(function() {
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.MonitorController.fetchStatistics}',
                    function(data) {
                        {!$Setup.NamespaceSetting__c.DotPrefix__c}Stats.reload(data);
                    }
                );
            }, 15000);
        }());
    </script>
    
</apex:page>